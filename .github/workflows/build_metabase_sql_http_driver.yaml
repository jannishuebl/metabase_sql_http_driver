name: Build Metabase SQL-HTTP Driver

on:
  schedule:
    - cron: '0 6 * * *'
  push:
    branches: [ main ]
  pull_request:

  workflow_dispatch:

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
      metabase_version: ${{ steps.check.outputs.metabase_version }}
    steps:
      - name: Check for new Metabase release
        id: check
        run: |
          set +e
          LATEST_TAG=$(curl -s https://api.github.com/repos/metabase/metabase/releases/latest | jq -r .tag_name)
          echo "Latest Metabase tag: $LATEST_TAG"
          DRIVER_TAG_EXISTS=$(curl -s https://api.github.com/repos/${{ github.repository }}/git/refs/tags | jq -r '.[].ref' | grep -c "refs/tags/${LATEST_TAG}")
          if [ "$DRIVER_TAG_EXISTS" -gt 0 ]; then
            echo "Driver already built for $LATEST_TAG"
            echo "should_build=false" >> $GITHUB_OUTPUT
          else
            echo "New Metabase version found: $LATEST_TAG"
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "metabase_version=$LATEST_TAG" >> $GITHUB_OUTPUT
          fi
          set -e
  build:
    runs-on: ubuntu-latest
    needs: check-release
    if: needs.check-release.outputs.should_build == 'true'
    permissions:
      contents: write
      packages: write
    steps:
    - name: Clone Metabase repository
      uses: actions/checkout@v4
      with:
        repository: metabase/metabase
        ref: ${{ needs.check-release.outputs.metabase_version }}
        path: metabase
        
    - name: Checkout driver code
      uses: actions/checkout@v4
      with:
        path: metabase/modules/drivers/sql-http
        
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        
    - name: Install Yarn 1.x
      run: |
        npm install -g yarn@1
        yarn --version
        
    - name: Set up Clojure
      uses: DeLaGuardo/setup-clojure@12.3
      with:
        cli: latest
        
    - name: Build driver
      working-directory: ./metabase
      run: |
        git apply ./modules/drivers/sql-http/ci/metabase_drivers_deps.patch
        chmod +x ./bin/build-driver.sh
        ./bin/build-driver.sh sql-http
        
    - name: Upload driver artifact
      uses: actions/upload-artifact@v4
      with:
        name: metabase-sql-http-driver
        path: metabase/resources/modules/sql-http.metabase-driver.jar
        if-no-files-found: error
        
    - name: Create GitHub release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.check-release.outputs.metabase_version }}
        name: Release for Metabase Version ${{ needs.check-release.outputs.metabase_version }}
        files: metabase/resources/modules/sql-http.metabase-driver.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
